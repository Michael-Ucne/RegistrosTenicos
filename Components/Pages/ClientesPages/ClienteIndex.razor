@page "/Cliente"
@inject ClientesServices clientesServices
@inject TecnicosServices tecnicosServices
@inject NavigationManager navigationManager
@rendermode InteractiveServer

<PageTitle>Lista de Clientes</PageTitle>
<div class="container">
    <div class="card shadow-lg">
        <div class="card-header text-center bg-primary text-white">
            <h5 class="card-title text-center">
                <strong>
                    Consulta de Clientes
                </strong>
            </h5>
        </div>

        <div class="card-body">
            <div class="d-flex justify-content-end mb-2">
                <a href="@AppRoutes.CCreate" class="btn btn-success">
                    <span class="bi bi-plus-square"></span> Crear
                </a>
            </div>

            @* Labels *@
            <div class="row">
                @* Filtrar por ClienteName *@
                <div class="col-3">
                    <label class="col-form-label">
                        <strong>Filtrar por</strong>
                    </label>
                    <InputSelect class="form-select" @bind-Value="Filtro">
                        <option value="" selected disabled>Elija una opci&oacute;n</option>
                        <option value="Id">Id</option>
                        <option value="FechaIngreso">Fecha de Ingreso</option>
                        <option value="ClienteNames">Nombres</option>
                        <option value="Direccion">Direcci&oacute;n</option>
                        <option value="Rnc">RNC</option>
                        <option value="LimiteCredito">L&iacute;mite de Cr&eacute;dito</option>
                        <option value="TecnicoId">T&eacute;cnico Encargado</option>
                    </InputSelect>
                </div>
                @* ValorFiltro *@
                <div class="col-4">
                    <label class="col-form-label">
                        <strong>B&uacute;squeda</strong>
                    </label>
                    <div class="input-group">
                        <input class="form-control" @bind="ValorFiltro" placeholder="Buscar" />
                        <button type="button" class="btn btn-outline-primary bi bi-search" @onclick="Buscar">Buscar</button>
                    </div>
                </div>
            </div>

            <table class="table table-striped table-hover table-bordered mt-4">
                <thead class="table text-black">
                    <tr>
                        <th>Cliente ID</th>
                        <th>Fecha de Ingreso</th>
                        <th>Clientes</th>
                        <th>Direcci&oacute;n</th>
                        <th>RNC</th>
                        <th>L&iacute;mite de Cr&eacute;dito</th>
                        <th>T&eacute;cnico Encargado</th>
                        <th>Editar</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var cliente in clientes)
                    {
                        <tr>
                            <td>@cliente.ClienteId</td>
                            <td>@cliente.FechaIngreso.ToString("yyyy-MM-dd")</td>
                            <td>@cliente.ClienteName</td>
                            <td>@cliente.Direccion</td>
                            <td>@cliente.RNC</td>
                            <td>@cliente.LimiteCredito.ToString("N2")</td>
                            <td>@Tecnicos.Find(t => t.TecnicoId == cliente.TecnicoEncargadoId)?.TecnicoName</td>
                            <td>
                                <a href="@AppRoutes.CEdit/@cliente.ClienteId" class="btn btn-outline-success btn-sm">
                                    <i class="bi bi-pencil-square"></i>
                                </a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@code {

    List<Tecnicos> Tecnicos { get; set; } = new List<Tecnicos>();
    List<Clientes> clientes { get; set; } = new List<Clientes>();
    public string Filtro { get; set; } = string.Empty;
    public string ValorFiltro { get; set; } = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        clientes = await clientesServices.Listar(c => c != null);
        Tecnicos = (await tecnicosServices.Listar(t => true)).ToList();
    }

    private async Task Buscar()
    {
        if (Filtro == "Id")
        {
            clientes = await clientesServices.Listar(c => c.ClienteId.ToString().Contains(ValorFiltro));
        }
        else if (Filtro == "FechaIngreso")
        {
            clientes = await clientesServices.Listar(c => c.FechaIngreso.ToString("yyyy-MM-dd").Contains(ValorFiltro));
        }
        else if (Filtro == "ClienteNames")
        {
            clientes = await clientesServices.Listar(c => c.ClienteName.ToString().Contains(ValorFiltro));
        }
        else if (Filtro == "Direccion")
        {
            clientes = await clientesServices.Listar(c => c.Direccion.ToString().Contains(ValorFiltro));
        }
        else if (Filtro == "Rnc")
        {
            clientes = await clientesServices.Listar(c => c.RNC.ToString().Contains(ValorFiltro));
        }
        else if (Filtro == "LimiteCredito")
        {
            clientes = await clientesServices.Listar(c => c.LimiteCredito.ToString().Contains(ValorFiltro));
        }
        else if (Filtro == "TecnicoId")
        {
            clientes = await clientesServices.Listar(c => c.TecnicoEncargadoId.ToString().Contains(ValorFiltro));
        }
    }
}

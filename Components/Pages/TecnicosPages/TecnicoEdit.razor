@page "/Tecnico/Edit/{TecnicoId:int}"
@inject TecnicosServices tecnicosServices
@inject NavigationManager navigationManager
@rendermode InteractiveServer

@*HTML*@
<PageTitle>Crear Tecnico</PageTitle>
<EditForm Model="Tecnico" OnValidSubmit="Guardar">
    <DataAnnotationsValidator/>

    <div class="container">
        <div class="card shadow-lg">
            <div class="card-header text-center bg-primary text-white">
                <h5 class="card-title">
                    <strong>
                        Editar Tecnico
                    </strong>
                </h5>
            </div>

            <div class="card-body">
                @*TecnicoId*@
                <div class="mb-3">
                    <label class="form-label">
                        <strong>Tecnico ID</strong>
                    </label>
                    <InputNumber class="form-control" @bind-Value="Tecnico.TecnicoId" readonly/>
                </div>

                @*Nombres*@
                <div class="mb-3">
                    <label class="alert-warning">
                        <strong>
                            @Mensaje
                        </strong>
                    </label>
                    <label class="form-label">
                        <strong>
                            Nombres
                        </strong>
                    </label>
                    <InputText class="form-control" @bind-Value="Tecnico.TecnicoName"/>
                    <ValidationMessage For="(() => Tecnico.TecnicoName)"/>
                </div>

                @*SueldoHora*@
                <div class="mb-3">
                    <label class="form-label">
                        <strong>
                            SueldoHora
                        </strong>
                    </label>
                    <InputNumber class="form-control" @bind-Value="Tecnico.SueldoHora"/>
                    <ValidationMessage For="(() => Tecnico.SueldoHora)"/>
                </div>

                @*Footer*@
                <div class="card-footer text-center mt-2">
                    <div class="btn-group" role="group" aria-label="Acciones unidas">
                        <a href="/Tecnico/Delete/@TecnicoId" class="btn btn-outline-primary bi bi-trash"> Eliminar</a>
                        <button type="submit" class="btn btn-outline-success bi bi-floppy"> Guardar</button>
                        <a href="/Tecnico/Index" class="btn btn-outline-secondary">
                            <span class="bi bi-arrow-left"></span> Volver
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</EditForm>

@code {

    [Parameter] public int TecnicoId { get; set; }

    private string Mensaje = "";

    private Tecnicos Tecnico { get; set; } = new Tecnicos();

    protected override async Task OnInitializedAsync()
    {
        Tecnico = await tecnicosServices.Buscar(TecnicoId);
    }

    public async Task Guardar()
    {
        List<Tecnicos> tecnicos = await tecnicosServices.Listar(t => t.TecnicoName == Tecnico.TecnicoName);
        if (tecnicos.Count == 1 && (tecnicos[0].TecnicoId != Tecnico.TecnicoId))
        {
            Mensaje = "Ya existe un Tenico con ese nombre";
            return;
        }
        await tecnicosServices.Guardar(Tecnico);
        navigationManager.NavigateTo(uri: "/Tecnico/Index");
    }
}

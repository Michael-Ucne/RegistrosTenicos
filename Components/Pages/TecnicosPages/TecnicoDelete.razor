@page "/Tecnico/Delete/{TecnicoId:int}"
@inject TecnicosServices tecnicosServices
@inject NavigationManager navigationManager
@rendermode InteractiveServer

<PageTitle>Eliminar T&eacute;cnico</PageTitle>

<EditForm Model="Tecnico" OnValidSubmit="Eliminar">
    <div class="card shadow-lg">
        <div class="card-header text-center bg-primary text-white">
            <h5 class="card-title"><strong>Eliminar T&eacute;cnico</strong></h5>
        </div>
        <div class="card-subtitle text-center bg-danger text-white py-2">
            <h5>&iquest;Est&aacute;s seguro de querer eliminar a este T&eacute;cnico?</h5>
        </div>
        <div class="card-body">
            @if (Tecnico == null)
            {
                <div class="alert alert-warning">T&eacute;cnico no encontrado.</div>
            }
            else
            {
                <div class="mb-3">
                    <label class="form-label"><strong>T&eacute;cnico ID: </strong>@TecnicoId</label>
                </div>
                <div class="mb-3">
                    <label class="form-label"><strong>Nombre: </strong>@Tecnico.TecnicoName</label>
                </div>
                <div class="mb-3">
                    <label class="form-label"><strong>Sueldo por hora: </strong>@Tecnico.SueldoHora.ToString("N2")</label>
                </div>
            }
        </div>
        <div class="card-footer text-center mt-2">
            <div class="btn-group" role="group" aria-label="Acciones unidas">
                @if (Tecnico != null)
                {
                    <button type="submit" class="btn btn-outline-danger bi bi-trash">
                        Eliminar
                    </button>
                }
                <a href="@AppRoutes.TIndex" class="btn btn-outline-secondary">
                    <span class="bi bi-arrow-left"></span> Volver
                </a>
            </div>
        </div>
    </div>
</EditForm>

@code {
    [Parameter] public int TecnicoId { get; set; }
    private Tecnicos? Tecnico { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Tecnico = await tecnicosServices.Buscar(TecnicoId);
    }

    private async Task Eliminar()
    {
        if (Tecnico != null)
        {
            await tecnicosServices.Eliminar(TecnicoId);
        }
        navigationManager.NavigateTo(AppRoutes.TIndex);
    }
}

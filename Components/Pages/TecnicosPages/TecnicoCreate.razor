@page "/Tecnico/Create"
@inject TecnicosServices tecnicosServices
@inject NavigationManager navigationManager
@rendermode InteractiveServer

@*HTML*@
<PageTitle>Create</PageTitle>
<EditForm Model="Tecnico" OnValidSubmit="Guardar">
    <DataAnnotationsValidator/>

    <div class="container">
        <div class="card shadow-lg">
            <div class="card-header text-center">
                <h5 class="card-title">Registrar Tecnico</h5>
            </div>

            <div class="card-body">

                @*TecnicoId*@
                <div class="mb-3">
                    <label class="form-label">
                        <strong>TecnicoID</strong>
                        <InputNumber class="form-control" @bind-Value="Tecnico.TecnicoId" readonly></InputNumber>
                    </label>
                </div>

                @*Nombres*@
                <div class="mb-3">
                    <label class="form-label">
                        <strong>Nombres</strong>
                        <InputText class="form-control" @bind-Value="Tecnico.TecnicoName"></InputText>
                        <ValidationMessage For="(() => Tecnico.TecnicoName)"/>
                    </label>
                </div>

                @*SueldoHora*@
                <div class="mb-3">
                    <label class="form-label">
                        <strong>SueldoHora</strong>
                        <InputNumber class="form-control" @bind-Value="Tecnico.SueldoHora"></InputNumber>
                        <ValidationMessage For="(() => Tecnico.SueldoHora)"/>
                    </label>
                </div>

                @*footer*@
                <div class="card-footer text-center mt-2">
                    <button type="button" class="btn btn-primary bi bi-file-earmark-plus" @onclick="Nuevo"> Nuevo</button>
                    <button type="submit" class="btn btn-success bi bi-floppy"> Guardar</button>
                    <a href="/Tecnico/Index" class="btn btn-danger">
                        <span class="bi bi-arrow-left"> </span>
                        Retroceder
                    </a>
                </div>

            </div>
        </div>
    </div>
</EditForm>

@code
{
    private string TecnicoExiste = "";

    private Tecnicos Tecnico { get; set; } = new Tecnicos();

    private async Task Guardar()
    {
        List<Tecnicos> tecnicos = await tecnicosServices.Listar(t => t.TecnicoName == Tecnico.TecnicoName);
        if(tecnicos.Count == 1 && (tecnicos[0].TecnicoId != Tecnico.TecnicoId))
        {
            TecnicoExiste = "Ya existe un Tenico con ese nombre";
            return;
        }
        await tecnicosServices.Guardar(Tecnico);
        navigationManager.NavigateTo(uri:"/Tecnico/Index");
    }

    private void Nuevo()
    {
        Tecnico = new Tecnicos();
        StateHasChanged();
    }
}
